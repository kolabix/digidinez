name: Deploy Public Menu to Prod

on:
  push:
    branches: [main]
    paths:
      - 'public-menu/**'
      - '.github/workflows/deploy-menu-prod.yml'
  workflow_dispatch:
    inputs:
      restaurant_id:
        description: 'Restaurant ID to deploy for'
        required: false
        type: string
        default: ''
      restaurant_name:
        description: 'Restaurant name for logging'
        required: false
        type: string
        default: ''
      environment:
        description: 'Deployment environment'
        required: false
        default: 'prod'
        type: choice
        options:
          - prod
      trigger_source:
        description: 'What triggered this deployment'
        required: false
        default: 'git-push'
        type: string

env:
  AWS_REGION: ap-south-1

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: 'public-menu/package-lock.json'

      - name: Install dependencies
        run: npm ci
        working-directory: ./public-menu

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get SSM Parameters
        run: |
          echo "S3_BUCKET=$(aws ssm get-parameter --name "/digidinez/prod/MENU_S3_BUCKET" --query "Parameter.Value" --output text --region ap-south-1)" >> $GITHUB_ENV
          echo "CLOUDFRONT_DISTRIBUTION_ID=$(aws ssm get-parameter --name "/digidinez/prod/MENU_CLOUDFRONT_DISTRIBUTION_ID" --query "Parameter.Value" --output text --region ap-south-1)" >> $GITHUB_ENV
          echo "SSG_BUILD_SECRET=$(aws ssm get-parameter --name "/digidinez/prod/SSG_BUILD_SECRET" --with-decryption --query "Parameter.Value" --output text --region ap-south-1)" >> $GITHUB_ENV

      - name: Build application
        run: |
          if [ "${{ github.event.inputs.restaurant_id }}" != "" ]; then
            echo "Building for specific restaurant: ${{ github.event.inputs.restaurant_id }}"
            RESTAURANT_ID="${{ github.event.inputs.restaurant_id }}" npm run build:selective
          else
            echo "Building for all restaurants (push event)"
            npm run build:prod
          fi
        working-directory: ./public-menu
        env:
          VITE_API_URL: https://api.digidinez.com

      - name: Deploy to S3
        run: |
          if [ "${{ github.event.inputs.restaurant_id }}" != "" ]; then
            echo "Selective deployment - preserving other restaurants' files"
            aws s3 sync public-menu/dist/ s3://${{ env.S3_BUCKET }}
          else
            echo "Full deployment - cleaning old files for fresh deployment"
            aws s3 sync public-menu/dist/ s3://${{ env.S3_BUCKET }} --delete
          fi

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"

      - name: Deployment complete
        run: |
          echo "Public menu deployed to menu.digidinez.com"
          echo "Restaurant: ${{ github.event.inputs.restaurant_name || 'Auto-deploy from push' }} (ID: ${{ github.event.inputs.restaurant_id || 'auto-deploy' }})"
          echo "Environment: ${{ github.event.inputs.environment || 'prod' }}"
          echo "Trigger: ${{ github.event.inputs.trigger_source || 'git-push' }}"
