name: Deploy Admin to Staging

on:
  push:
    branches: [staging]
    paths:
      - 'admin/**'
      - '.github/workflows/deploy-admin-staging.yml'
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: 'admin/package-lock.json'

      - name: Install dependencies
        run: npm ci
        working-directory: ./admin

      - name: Build application
        run: npm run build
        working-directory: ./admin
        env:
          VITE_API_URL: https://staging-api.digidinez.com
          VITE_PUBLIC_MENU_BASE_URL: https://staging-menu.digidinez.com

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get SSM Parameters
        run: |
          echo "S3_BUCKET=$(aws ssm get-parameter --name "/digidinez/staging/ADMIN_S3_BUCKET" --query "Parameter.Value" --output text --region ap-south-1)" >> $GITHUB_ENV
          echo "CLOUDFRONT_DISTRIBUTION_ID=$(aws ssm get-parameter --name "/digidinez/staging/ADMIN_CLOUDFRONT_DISTRIBUTION_ID" --query "Parameter.Value" --output text --region ap-south-1)" >> $GITHUB_ENV

      - name: Deploy to S3
        run: |
          aws s3 sync admin/dist/ s3://${{ env.S3_BUCKET }} --delete

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"

      - name: Deployment complete
        run: echo "Admin app deployed to staging-admin.digidinez.com"
